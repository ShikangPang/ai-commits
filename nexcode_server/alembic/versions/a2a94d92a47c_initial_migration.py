"""initial_migration

Revision ID: a2a94d92a47c
Revises: 
Create Date: 2025-07-24 16:05:10.717802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a2a94d92a47c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_cas_user_id', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_document_collaborators_id', table_name='document_collaborators')
    op.drop_table('document_collaborators')
    op.drop_index('ix_documents_id', table_name='documents')
    op.drop_table('documents')
    op.drop_index('ix_document_operations_id', table_name='document_operations')
    op.drop_table('document_operations')
    op.drop_index('ix_user_sessions_id', table_name='user_sessions')
    op.drop_index('ix_user_sessions_session_token', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index('ix_commit_info_id', table_name='commit_info')
    op.drop_table('commit_info')
    op.drop_index('ix_api_keys_id', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index('ix_document_versions_id', table_name='document_versions')
    op.drop_table('document_versions')
    op.drop_index('ix_system_settings_id', table_name='system_settings')
    op.drop_table('system_settings')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('site_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('site_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('admin_email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('max_file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_timeout', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('enable_registration', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('enable_email_verification', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('smtp_host', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('smtp_port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('smtp_username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('smtp_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('smtp_use_tls', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='system_settings_pkey')
    )
    op.create_index('ix_system_settings_id', 'system_settings', ['id'], unique=False)
    op.create_table('document_versions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('change_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('changed_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], name='document_versions_changed_by_fkey'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='document_versions_document_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='document_versions_pkey')
    )
    op.create_index('ix_document_versions_id', 'document_versions', ['id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('key_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('key_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('key_prefix', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('scopes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('rate_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_used', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='api_keys_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='api_keys_pkey')
    )
    op.create_index('ix_api_keys_id', 'api_keys', ['id'], unique=False)
    op.create_table('commit_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('repository_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('repository_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('branch_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('commit_hash', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('user_selected_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ai_generated_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('final_commit_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('diff_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('files_changed', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('lines_added', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lines_deleted', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ai_model_used', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ai_parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('generation_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('commit_style', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('committed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='commit_info_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='commit_info_pkey')
    )
    op.create_index('ix_commit_info_id', 'commit_info', ['id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('cas_ticket', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('last_activity', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_sessions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_sessions_pkey')
    )
    op.create_index('ix_user_sessions_session_token', 'user_sessions', ['session_token'], unique=True)
    op.create_index('ix_user_sessions_id', 'user_sessions', ['id'], unique=False)
    op.create_table('document_operations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('operation_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('sequence_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('operation_type', postgresql.ENUM('INSERT', 'DELETE', 'RETAIN', name='operationtype'), autoincrement=False, nullable=False),
    sa.Column('start_position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('end_position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='document_operations_document_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='document_operations_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='document_operations_pkey')
    )
    op.create_index('ix_document_operations_id', 'document_operations', ['id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('documents_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_editor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'DELETED', 'ARCHIVED', name='documentstatus'), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['last_editor_id'], ['users.id'], name='documents_last_editor_id_fkey'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='documents_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_documents_id', 'documents', ['id'], unique=False)
    op.create_table('document_collaborators',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission', postgresql.ENUM('OWNER', 'EDITOR', 'READER', name='permissionlevel'), autoincrement=False, nullable=False),
    sa.Column('added_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('added_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], name='document_collaborators_added_by_fkey'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='document_collaborators_document_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='document_collaborators_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='document_collaborators_pkey')
    )
    op.create_index('ix_document_collaborators_id', 'document_collaborators', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cas_user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('cas_attributes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index('ix_users_cas_user_id', 'users', ['cas_user_id'], unique=True)
    # ### end Alembic commands ###
