# Nexcode Local Repository Configuration
# 本地仓库配置文件 - 基于代码默认配置优化
# 此配置会覆盖全局配置设置
# 
# 配置完成后，使用以下命令测试推送:
#   nexcode push --dry-run

repository:
  # 仓库类型 - 影响默认的推送行为
  # 支持: github, gitlab, gerrit, gitee, bitbucket, custom
  type: github
  
  # 远程仓库名称 (通常是 origin)
  remote: origin
  
  # 目标分支名称 (用于某些推送模板)
  target_branch: main
  
  # 推送命令模板 - 标准GitHub/GitLab推送
  # 可用变量: {remote}, {branch}, {target_branch}
  push_command: "git push {remote} {branch}"

commit:
  # 提交消息风格 - 使用conventional commits
  # 可选值: conventional, semantic, simple, emoji
  style: conventional
  
  # 默认启用代码质量检查
  # 帮助发现潜在问题
  check_bugs_by_default: true

# LLM配置优化 (对应后端代码的默认设置)
llm:
  # 模型设置 - 使用更准确的模型
  model: "gpt-4o-mini"
  
  # 温度设置 - 降低随机性，提高准确性
  temperature: 0.1  # 对于提交消息生成
  
  # Token限制 - 增加以处理更大的diff
  max_tokens: 2048

# 示例配置场景:
#
# Gerrit 代码评审工作流:
# repository:
#   type: gerrit
#   remote: origin
#   target_branch: dev-yangkewei-impl
#   push_command: "git push {remote} HEAD:refs/for/{target_branch}"
#
# GitLab MR 自动创建:
# repository:
#   type: gitlab
#   remote: origin
#   target_branch: main
#   push_command: "git push {remote} {branch} -o merge_request.create"
#
# 强制推送配置:
# repository:
#   type: custom
#   remote: upstream
#   target_branch: develop
#   push_command: "git push --force-with-lease {remote} {branch}"
#
# 开源项目配置:
# repository:
#   type: github
#   remote: upstream
#   target_branch: main
#   push_command: "git push {remote} {branch}"
# commit:
#   style: conventional
#   check_bugs_by_default: true 